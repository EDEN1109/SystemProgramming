파일에 맞게 residents 파일을 초기화 해두었습니다!

설명

사용자에게 1. 투숙객의 목록을 볼지, 2. 투숙객을 지울지, 3. 투숙객을 추가할지, 4. 프로그램을 끝낼지 입력받는다.

만일 1~4를 제외한 다른 키를 입력하면 다시 입력받게 된다.

1번을 선택하면, 기존의 코드의 방법을 사용하여 현재 방에 있는 사람을 보여준다.

2번을 선택하면, 투숙객을 삭제할 방의 번호를 입력하게 된다. 방의 번호를 입력하면 해당방의 투숙객이 삭제된다.
residents파일을 쓰고읽기모드로 열게 되며, offset의 위치를 해당 방에 맞게 지정한다.
만일 해당위치를 찾을 수 없으면 즉시 함수를 리턴한다.
for문을 이용해 지정한 이름의 수(7자)보다 하나 적게 namebuf에 공백을 넣는다.
마지막 배열에는 \0를 넣어 문자열의 끝임을 나타낸다.
그리고 공백과 널문자로 이루어진 배열을 원래 투숙객의 이름 대신 넣어 기존의 투숙객을 삭제한다.

3번을 선택하면, 추가하고 싶은 방의 번호와 투숙객의 이름을 입력하게 된다.
이때 투숙객의 이름이 NAMELENGTH - 1보다 적으면 for문을 이용해 공백을 채워넣어 혹시 생길 오류를 방지한다. 마지막 NAMELENGTH-1번째 배열에는 문장의 끝을 알리는 \0를 넣는다.
residents파일을 쓰고읽기모드로 열게 되며,  offset의 위치를 해당 방에 맞게 지정한다.
만일 해당위치를 찾을 수 없거나, 읽은 해당 방의 투숙객의 이름이 0보다 작거나(즉, 아예 방이 없는 경우),
현재 커서위치에서 설정한 글자수만큼 뒤로 갈수 없다면 즉시 함수를 리턴한다.
만일 namebuf의 1번째 글자가 공백이라면 이름이 공백으로 시작하는 사람은 없으므로, 빈방으로 인식하여 if문을 실행한다.
빈방이라면 이름의 맨 마지막 칸(NAMELENGTH - 1)에 널문자를 넣어준다. 그리고 그 이름을 해당하는 방에 써주게 된다.
if문이 실행되지 않은 경우 이미 찬 방으로 인식하여 방에 사람이 있음을 알려주고 코드를 마친다.

4번을 선택하면 while문을 탈출하며 프로그램이 끝난다.

그외의 수를 선택하면 1~4의 수를 선택하라는 안내문과 함께 다시 메뉴 선택으로 돌아간다.